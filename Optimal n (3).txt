NETWORK B  $(\phi_{1,2}=2, \phi_{2,3}=1)$ b=0.5


Profit1=
((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840)*(-0.517857142857143*a*n - 0.928571428571428*a - 0.892857142857143*b*n - 0.428571428571429*b - 0.142857142857143*c*n + 0.0714285714285715*c + 7.375) - (5- 2*a -2*n*b)*((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840) - 4*a**2


Profit2=
((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 )*(-0.928571428571428*a*n - 0.285714285714286*a - 0.428571428571429*b*n - 1.28571428571429*b - 0.428571428571428*c*n - 0.285714285714286*c + 6.5) - (5 - 3*b - 2*n*a - n*c)*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 ) - 6*b**2



Profit3=
((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56)*(10 - (119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56  -  0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 )) - ((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56)*(5 - 2*c - n*b) - 4*c**2



PROFITALL=
((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840)*(-0.517857142857143*(a_val)*n - 0.928571428571428*(a_val) - 0.892857142857143*(b_val)*n - 0.428571428571429*(b_val) - 0.142857142857143*(c_val)*n + 0.0714285714285715*(c_val) + 7.375) - (5- 2*(a_val) -2*n*(b_val))*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840) - 4*(a_val)**2 + ((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 )*(-0.928571428571428*(a_val)*n - 0.285714285714286*(a_val) - 0.428571428571429*(b_val)*n - 1.28571428571429*(b_val) - 0.428571428571428*(c_val)*n - 0.285714285714286*(c_val) + 6.5) - (5 - 3*(b_val) - 2*n*(a_val) - n*(c_val))*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 ) - 6*(b_val)**2 + ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56)*(10 - (119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56  -  0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 )) - ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56)*(5 - 2*(c_val) - n*(b_val)) - 4*(c_val)**2





# U = α*sum_i qi − sum_i (qi^2/2) - sumj̸=i bij*qi*qj − sum pi*qi    ((a_val)lph(a_val)=10)  Consumer Surplus:
#10*q1 - (q1^2)/2 - 0.8*(q1*q2) - p1*q1         +
#10*q2 - (q2^2)/2 - 0.8*(q2*q1) - 0.8*(q2*q3) - p2*q2         +
#10*q3 - (q3^2)/2 - 0.8*(q3*q2) - p3*q3         = Total Utility
#remember to modify quantity and expression for python syntax



Consumer surplus=
10*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840  - ((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 **2)/2 - 0.5*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 *(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14) - (10 - (1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14))*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 + 10*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 - ((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14**2)/2 - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 ) - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56) - (10 - (21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 - 0.5*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840) - 0.5*((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56))*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 + 10*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56 - ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56**2)/2 - 0.5*((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14) - (10 - (119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56  -  0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 ))*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56 



Welfare=
10*(1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840  - ((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840 **2)/2 - 0.5*((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840 *(21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14) - (10 - (1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840 - 0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14))*(1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840 + 10*(21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 - ((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14**2)/2 - 0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14*(1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840 ) - 0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14*(119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56) - (10 - (21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 - 0.5*((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840) - 0.5*((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56))*(21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 + 10*(119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56 - ((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56**2)/2 - 0.5*((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56*(21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14) - (10 - (119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56  -  0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 ))*(119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56 + ((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840)*(-0.517857142857143*a*n - 0.928571428571428*a - 0.892857142857143*b*n - 0.428571428571429*b - 0.142857142857143*c*n + 0.0714285714285715*c + 7.375) - (5- 2*a -2*n*b)*((1575 + a*(900 - 15*n) + b*(930*n - 360) + c*(60 -120*n))/840) - 4*a**2 + ((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 )*(-0.928571428571428*a*n - 0.285714285714286*a - 0.428571428571429*b*n - 1.28571428571429*b - 0.428571428571428*c*n - 0.285714285714286*c + 6.5) - (5 - 3*b - 2*n*a - n*c)*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 ) - 6*b**2 + ((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56)*(10 - (119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56  -  0.5*((21 + a*(15*n-4) + b*(24 - 6*n) + c*(8*n-4))/14 )) - ((119 + a*(4-15*n) + b*(34*n - 24) + c*(60 - 8*n))/56)*(5 - 2*c - n*b) - 4*c**2



Welfare (for python)=
10*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840  - ((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 **2)/2 - 0.5*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 *(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14) - (10 - (1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14))*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 + 10*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 - ((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14**2)/2 - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14*(1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840 ) - 0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56) - (10 - (21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 - 0.5*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840) - 0.5*((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56))*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 + 10*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56 - ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56**2)/2 - 0.5*((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56*(21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14) - (10 - (119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56  -  0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 ))*(119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56 + ((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840)*(-0.517857142857143*(a_val)*n - 0.928571428571428*(a_val) - 0.892857142857143*(b_val)*n - 0.428571428571429*(b_val) - 0.142857142857143*(c_val)*n + 0.0714285714285715*(c_val) + 7.375) - (5- 2*(a_val) -2*n*(b_val))*((1575 + (a_val)*(900 - 15*n) + (b_val)*(930*n - 360) + (c_val)*(60 -120*n))/840) - 4*(a_val)**2 + ((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 )*(-0.928571428571428*(a_val)*n - 0.285714285714286*(a_val) - 0.428571428571429*(b_val)*n - 1.28571428571429*(b_val) - 0.428571428571428*(c_val)*n - 0.285714285714286*(c_val) + 6.5) - (5 - 3*(b_val) - 2*n*(a_val) - n*(c_val))*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 ) - 6*(b_val)**2 + ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56)*(10 - (119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56  -  0.5*((21 + (a_val)*(15*n-4) + (b_val)*(24 - 6*n) + (c_val)*(8*n-4))/14 )) - ((119 + (a_val)*(4-15*n) + (b_val)*(34*n - 24) + (c_val)*(60 - 8*n))/56)*(5 - 2*(c_val) - n*(b_val)) - 4*(c_val)**2



Optimal n: 1.0
Maximum function value: 44.156572545246064

