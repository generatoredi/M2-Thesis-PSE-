import numpy as np
from scipy.optimize import fsolve

# define a function that represents the system of equations
def equations(vars, n):
    a, b, c = vars
    eq1=-0.142857142857143*a*n - 7.42857142857143*a + 0.428571428571429*b*n - 0.142857142857143*b - 0.142857142857143*c*n - 0.142857142857143*c + (0.571428571428571 - 0.142857142857143*n)*(a + b*n - 5) + (0.571428571428571 - 0.142857142857143*n)*(-0.314285714285714*a*n - 0.342857142857142*a - 0.657142857142858*b*n - 0.314285714285714*b - 0.314285714285714*c*n - 0.314285714285714*c + 5.14285714285715) + (-0.314285714285714*n - 0.342857142857142)*(-0.142857142857143*a*n + 0.571428571428571*a + 0.428571428571429*b*n - 0.142857142857143*b - 0.142857142857143*c*n - 0.142857142857143*c + 1.42857142857143) + 1.42857142857143
    eq2=0.535714285714286*a*n - 0.142857142857143*a - 0.107142857142857*b*n - 11.4642857142857*b + 0.535714285714286*c*n + 0.0357142857142857*c + (0.535714285714286 - 0.107142857142857*n)*(a*n + b + c*n - 5) + (0.535714285714286 - 0.107142857142857*n)*(-0.421428571428572*a*n - 0.314285714285714*a - 0.235714285714286*b*n - 0.421428571428572*b - 0.421428571428572*c*n + 0.0785714285714287*c + 6.71428571428572) + (-0.235714285714286*n - 0.421428571428572)*(0.535714285714286*a*n - 0.142857142857143*a - 0.107142857142857*b*n + 0.535714285714286*b + 0.535714285714286*c*n + 0.0357142857142857*c + 2.14285714285714) + 2.14285714285714
    eq3=0.0357142857142857*a*n - 0.142857142857143*a + 0.392857142857143*b*n + 0.0357142857142857*b + 0.0357142857142857*c*n - 7.46428571428571*c + (0.0357142857142857*n + 0.535714285714286)*(b*n + c - 5) + (0.0357142857142857*n + 0.535714285714286)*(0.0785714285714287*a*n - 0.314285714285714*a - 0.735714285714286*b*n + 0.0785714285714287*b + 0.0785714285714287*c*n - 0.421428571428572*c + 6.71428571428572) + (0.0785714285714287*n - 0.421428571428572)*(0.0357142857142857*a*n - 0.142857142857143*a + 0.392857142857143*b*n + 0.0357142857142857*b + 0.0357142857142857*c*n + 0.535714285714286*c + 2.14285714285714) + 2.14285714285714
    return [eq1, eq2, eq3]

# define a function to solve for a, b, c for specific values of n
def solve_for_n(n):
    initial_guess = [0, 0, 0]  # Initial guess for a, b, c
    sol = fsolve(equations, initial_guess, args=(n,))
    return sol

# test for specific values of n
n_values = np.array([0, 0.2, 0.4, 0.5, 0.8, 1])
for n in n_values:
    sol = solve_for_n(n)
    print("For n =", n)
    print("a =", sol[0])
    print("b =", sol[1])
    print("c =", sol[2])
